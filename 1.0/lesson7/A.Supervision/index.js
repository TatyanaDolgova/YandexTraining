// На первом курсе одной Школы, учится 1 ≤ N ≤ 109 студентов. При проведении экзаменов студентов рассаживают в ряд, каждого за своей
// партой. Парты пронумерованы числами от 0 до N - 1.

// Известно, что студент, оставшись без наблюдения, открывает телефон и начинает искать ответы на экзамен в поисковике Яндекса.

// Поэтому было решено позвать M преподавателей наблюдать за студентами. Когда за студентом наблюдает хотя бы один преподаватель, он
// стесняется и не идет искать ответы к экзамену. Преподаватель с номером i видит студентов сидящих за партами от bi до ei включительно.

// Необходимо посчитать количество студентов, которые все таки будут искать ответы к экзамену в Яндексе

// Формат ввода
// В первой строке находятся два целых числа 1 ≤ N ≤ 109, 1 ≤ M ≤ 104 — число студентов и число преподавателей соответственно.
// В следующих M строках содержится по два целых числа 0 ≤ bi ≤ ei ≤ N - 1 — парты, за которыми наблюдает i-й преподаватель.

// Формат вывода
// Выведите одно число — количество студентов оставшихся без наблюдения.

// Пример 1
// Ввод	
// 10 3
// 1 3
// 2 4
// 9 9
// Вывод
// 5
// Пример 2
// Ввод	
// 10 2
// 1 1
// 1 2
// Вывод
// 8
const fs = require('fs');

const data = fs.readFileSync('input.txt', { encoding: 'utf8' });
const [students, teachers] = data.toString().trim().split('\n')[0].split(' ').map(Number);
const arraysPoints = data.toString().trim().split('\n').slice(1).map(line => line.split(' ').map(Number));

const events = [];

for (let i = 0; i < arraysPoints.length; i++) {
  events.push([arraysPoints[i][0], -1]);
  events.push([arraysPoints[i][1], 1]);
}

events.sort((a, b) => {
  if (+a[0] !== +b[0]) {
    return +a[0] - +b[0]
  }
  return +a[1] - +b[1]
});

let count = 0;
let supervision = 0;

for (let i = 0; i < events.length; i++) {
  if (count > 0) {
    supervision += +events[i][0] - +events[i - 1][0];
  } else {
    supervision += 1;
  }
  if (+events[i][1] === 1) {
    count -= 1;
  }

  if (+events[i][1] === -1) {
    count += 1;
  }

}

const result = students - supervision;
fs.writeFileSync('output.txt', result.toString());